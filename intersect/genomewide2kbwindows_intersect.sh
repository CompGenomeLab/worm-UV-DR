#!/bin/bash

# Set the base directories
XRSEQ_DIR="../xrseqdata"
OUTPUT_DIR="../output/genelistintersect/2kbwindow"
WINDOW_BED="/pathto/Celegans_2kb_windows.bed" #generated by bedtools window from ce11 fasta

# Ensure output directory exists
mkdir -p "${OUTPUT_DIR}"

# Load the required module
module load bedtools

# Find all .bed files in the XRSEQ_DIR
SAMPLES=($(find "${XRSEQ_DIR}" -maxdepth 1 -type f -name "*.bed"))
# Check if SAMPLES array is empty
if [ ${#SAMPLES[@]} -eq 0 ]; then
    echo "Error: No .bed files found in ${XRSEQ_DIR}"
    exit 1
fi

# Loop through each sample and submit jobs to Slurm
for SAMPLE in "${SAMPLES[@]}"; do
    SAMPLE_NAME=$(basename "${SAMPLE}" .bed)

    # Skip empty files
    if [ ! -s "${SAMPLE}" ]; then
        echo "Skipping empty file: ${SAMPLE}"
        continue
    fi

    # Submit intersect job without strand specificity
    JOB_INT=$(sbatch --parsable --mem=64g -t 1200 --job-name="${SAMPLE_NAME}_INT" --output="${OUTPUT_DIR}/slurm-%j-${SAMPLE_NAME}-intersect.out" \
        --wrap="bedtools intersect -c -a ${WINDOW_BED} -b ${SAMPLE} -wa -F 0.5 > ${OUTPUT_DIR}/${SAMPLE_NAME}_2kbwindow.bed")

    # Submit read count job
    JOB_READCOUNT=$(sbatch --parsable --mem=64g -t 1200 --dependency=singleton --job-name="${SAMPLE_NAME}_readcount" --output="${OUTPUT_DIR}/slurm-%j-${SAMPLE_NAME}-read_count.out" \
        --wrap="grep -c \"^\" ${SAMPLE} > ${OUTPUT_DIR}/${SAMPLE_NAME}_readCount.txt")

    # RPKM Calculation
    sbatch --mem=128g -t 12000 --dependency=afterok:${JOB_INT}:${JOB_READCOUNT} --job-name="${SAMPLE_NAME}_RPKM" --output="${OUTPUT_DIR}/slurm-%j-${SAMPLE_NAME}-RPKM.out" \
    --wrap="
        TOTAL_READS=\$(cat ${OUTPUT_DIR}/${SAMPLE_NAME}_readCount.txt);
        if [ -z \"\$TOTAL_READS\" ]; then echo 'Error: Read count file empty for ${SAMPLE_NAME}' && exit 1; fi

        awk -v total_reads=\$TOTAL_READS 'BEGIN { OFS=\"\t\" } {
            if (\$4 > 0) {
                rpkm = (\$4 * 1e9) / (total_reads * (\$3 - \$2));
                print \$0, rpkm;
            } else {
                print \$0, 0;
            }
        }' ${OUTPUT_DIR}/${SAMPLE_NAME}_2kbwindow.bed > ${OUTPUT_DIR}/${SAMPLE_NAME}_2kbwindow_rpkm.bed
    "
done
